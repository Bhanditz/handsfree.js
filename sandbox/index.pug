div(style='opacity: 0; transition: opacity 0.5s ease')
  a.github-corner(href='https://github.com/labofoz/handsfreeJS')
    svg(width='80' height='80' viewBox='0 0 250 250' fill='url(#synthwave-gradient)' aria-hidden='true')
      path(d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z")
      path(d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm")
      path(d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body")
      
  .container
    .columns
      .column.col-6.col-md-8.col-sm-10.col-xs-12.col-mx-auto
        #logo
          .logo-sparkles
            div
              .logo-sparkles
                div
                  .handsfree-debug-wrap

        // Intro Card
        section
          .card
            .card-header
              h1.card-title.text-center <strong class="badge" data-badge="v2">handsfree.js</strong>
              p.text-center
                img.mr-1(src='https://img.shields.io/npm/v/handsfree.svg')
                img.mr-1(src='https://img.shields.io/github/last-commit/BrowseHandsfree/handsfreeJS.svg')
                img.mr-1(src='https://travis-ci.org/BrowseHandsfree/handsfreeJS.svg?branch=master')
                img.mr-1(src='https://img.shields.io/codecov/c/github/BrowseHandsfree/handsfreeJS/master.svg?style=flat')
              p.card-subtitle.text-gray A JavaScript drop-in library for adding handsfree interfaces to any website, service, and Internet of Thing, and also for creating handsfree games and experiences. Runs on any device that supports <a href="https://caniuse.com/#feat=stream">getUserMedia()</a>.
            .card-body(style='padding-top: 0')
              p.text-center
                button.btn.btn-primary.handsfree-show-when-stopped(onclick='handsfree.start()') Start Webcam
                button.btn.btn-error.handsfree-show-when-started(onclick='handsfree.stop()') Stop Webcam
              p ðŸŽ‰ <b>Hello Fellow Browsers</b>, I'm <a href="https://labofoz.com">Oz Ramos</a> and I've finally got handsfree.js v2 out! Handsfree.js v2 was rewritten to be much easier for developers and end-users. I've also introduced a better plugin architecture and so we're going to be exploring a lot of fun applications!
              p Click <kbd class="cursor-pointer" onclick='handsfree.start()'>Start Webcam</kbd> above after seeing my work-in-progress <a href="https://labofoz.com/2018/10/24/thinking-about-privacy-and-security/">Privacy and Security notes</a>. Hit me up with questions <a href="https://twitter.com/labofoz">@labofoz</a> and don't forget to <a href="https://patreon.com/browsehandsfree">check out my Patreon</a>!

        // Installation Notes
        section
          .card
            .card-header
              h2.card-title Installation
            .card-body
              p via HTML:
              pre 
                code.xml &lt;script src="https://unpkg.com/handsfree@2"&gt;&lt;/script&gt;
              
              p via NPM:
              pre
                code.bash npm i handsfree
              
              p Then in your project:
              
              pre
                code.xml.
                  &lt;script&gt;
                    const Handsfree = require('handsfree')
                    const handsfree = new Handsfree({debug: true})
                  &lt;/script&gt;

        // Adding Plugins
        section
          .card
            .card-header
              h2.card-title Adding Plugins
            .card-body
              p Handsfree.js is built around plugins. Plugins have several callbacks that hook into different events, and are added with <code>handsfree.use(config)</code>.
              p Each callback receives two arguments, <code>(faces, instance)</code>. <code>instance</code> refers to the <code>new Handsfree</code> instance you created. <code>faces</code> contains the following:
              pre
                code.javascript.
                  {
                    cursor: {
                      // Where on the screen the user is pointed at
                      x: 0,
                      y: 0,
                      // The target currently under the mouse
                      $target: 0
                    },
                    
                    // A list of all 64 landmarks
                    points: [{x, y}, ...],
                  
                    // The head's pitch (facing up/down)
                    rotationX: 0,
                    // The head's yaw (facing left/right)
                    rotationY: 0,
                    // The head's roll (as if doing a cartwheel while facing straight ahead)
                    rotationZ: 0,
                  
                    // The heads overall size within the camera
                    scale: 0,
                  
                    // Where the head is relative to the left edge of the video feed
                    translationX: 0,
                    // Where the head is relative to the top edge of the video feed
                    translationY: 0
                  }
                  
              p Here are the landmark points, with #27 being the reference point for rotation/translation:
              p
                img(src='/assets/brfv4_landmarks.jpg')
                  
              p Here's what our page scrolling plugin looks like:
              pre
                code.javascript.
                  handsfree.use({
                    // Required. The unique name for this plugin.
                    // If it's not unique, then it overwrites the previous version of the plugin.
                    name: 'scrolling',
                  
                    // The multiplier to scroll the page by
                    // Adjust with this.scrollSpeed or handsfree.plugin.scrolling.scrollSpeed
                    scrollSpeed: 0.1,
                  
                    /**
                     * Scrolls the page when the cursor is above/below the screen
                     * @param {Array}     faces    The array of face objects
                     * @param {Handsfree} instance The handsfree instance
                     */
                    onFrame (faces, instance) {
                      faces.forEach(face => {
                        let x = face.cursor.x
                        let y = face.cursor.y
                  
                        // Then add the points to the cursor!
                        instance.cursor.$el.style.left = x + 'px'
                        instance.cursor.$el.style.top = y + 'px'
                  
                        // Scroll the page
                        if (y < 0)
                          window.scrollTo(0, window.scrollY + y * this.scrollSpeed)
                        else if (y > window.innerHeight)
                          window.scrollTo(0, window.scrollY + (y - window.innerHeight) * this.scrollSpeed)
                      })
                    }
                  })

        // The Global Event
        section
          .card
            .card-header
              h2.card-title Window Events
            .card-body
              p If you don't have access to the handsfree instance, or if you don't want to create a plugin, an alternative is to just listen to the following window events:
              
              pre
                code.javascript.
                  /**
                   * Bind to the handsfree-trackFaces event, which is called once per frame
                   * @param {Handsfree} ev.detail.scope The handsfree instance
                   * @param {Object}    ev.detail.faces An array of face objects
                   */
                  window.addEventListener('handsfree-trackFaces', (ev) => {
                    // Do code with the handsfree instance: ev.detail.scope
                    // or with the faces ev.detail.faces.forEach(face => {})
                  })
                  
                  /**
                   * Bind to the handsfree-injectDebugger event
                   * @param {Handsfree}       ev.detail.scope The handsfree instance
                   * @param {Canvas2DContent} ev.detail.canvasContext The 2D debug canvas context
                   */
                  window.addEventListener('handsfree-injectDebugger', (ev) => {
                    // Do code with the handsfree instance: ev.detail.scope
                    // or draw into the canvas with ev.detail.canvasContext
                  })

        // Getting Elements
        section
          .card
            .card-header
              h2.card-title Getting Elements
            .card-body
              p You can get the element currently underneath the cursor with <code>.cursor.$target</code>:
              pre
                code.javascript.
                  // Outside of plugins
                  const $target = handsfree.faces[n].cursor.$target
                  
                  // Inside plugins
                  handsfree.use({
                    onFrame (face) {
                      const $target = face.cursor.$target
                    }
                  })

              p You can do anything with the target including manipulating it (eg with jQuery) and dispatching events with the <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events">dispatchEvent API</a>.

        // Simple Keyboard
        .card
          .card-header
            h2.card-title Simple Keyboard
          .card-body
            p The <code>SimpleKeyboard</code> plugin adds a simple keyboard to the page. The keyboard is rendered into any element with <code>.handsfree-simple-keyboard</code>, allowing you to inject it into modals or hide the keyboard until it's needed.

            p.text-center
              button.btn.btn-primary.handsfree-show-when-stopped(onclick='handsfree.start()') Start Webcam
              button.btn.btn-error.handsfree-show-when-started(onclick='handsfree.stop()') Stop Webcam

  .container(style='padding-bottom: 100px')
    .columns
      .column.col-12.col-mx-auto
        .handsfree-simple-keyboard
